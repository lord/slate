version: 2.1

orbs:
  awscli: circleci/aws-cli@0.1.6

jobs:
  build-and-upload:

    environment:
      ENVIRONMENT: 'production'
      REPOSITORY_NAME: 'tier/documentation'

    working_directory: ~/repo

    docker:
      - image: 373437620866.dkr.ecr.eu-central-1.amazonaws.com/tier/buildtools:latest
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

    steps:
      - awscli/configure
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: "Build Container"
          command: docker build -t ${REPOSITORY_NAME} -f docker/Dockerfile .
      - run:
          name: "Create AWS ECR repository"
          command: |
            aws ecr describe-repositories --repository-names ${REPOSITORY_NAME} > /dev/null 2>&1 || \
            aws ecr create-repository --repository-name ${REPOSITORY_NAME}
      - run:
          name: "Store Container"
          command: |
            ACCOUNT=$(aws sts get-caller-identity --region eu-central-1 --output text --query 'Account')
            eval $(aws ecr get-login --region eu-central-1 --no-include-email)
            docker tag ${REPOSITORY_NAME} ${ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/${REPOSITORY_NAME}
            docker push ${ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/${REPOSITORY_NAME}:latest

  deploy-to-stage:

    environment:
      ENVIRONMENT: 'stage'

    working_directory: ~/repo

    docker:
      - image: 373437620866.dkr.ecr.eu-central-1.amazonaws.com/tier/buildtools:latest
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

    steps:
      - awscli/configure
      - checkout

      - run:
          name: "Deployment"
          command: |
            eb deploy documentation-stage
      - run:
          name: "Deploy"
          command: |
            aws --region eu-central-1 eks update-kubeconfig --name tier-k8s-cluster-stage
            kubectl cluster-info
            cd k8s && helmfile sync
      - run:
          name: "Announce Deployment"
          command: ./.datadog/announce-deployment.sh

  deploy-to-production:

    environment:
      ENVIRONMENT: 'production'

    working_directory: ~/repo

    docker:
      - image: 373437620866.dkr.ecr.eu-central-1.amazonaws.com/tier/buildtools:latest
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

    steps:
      - awscli/configure
      - checkout 

      - run:
          name: "Deployment"
          command: |
            ### 
            #   Hack EB Deploy deploys what is checked in to HEAD
            #   We change the organisation ECR and stage it so eb deploy functions
            ### 
            sed -i s/075108987694/373437620866/g Dockerrun.aws.json
            git add Dockerrun.aws.json
            eb deploy documentation-production --staged
      - run:
          name: "Deploy"
          command: |
            aws --region eu-central-1 eks update-kubeconfig --name tier-k8s-cluster-production
            kubectl cluster-info
            cd k8s && helmfile sync
      - run:
          name: "Announce Deployment"
          command: ./.datadog/announce-deployment.sh
workflows:
  version: 2
  deploy:
    jobs:
    - build-and-upload:
        context: global-production
    - deploy-to-stage:
        context: global-staging
        requires:
          - build-and-upload
    - deploy-to-production:
        context: global-production
        requires:
          - build-and-upload
          - deploy-to-stage

