# status: implemented, deprecated, not-implemented
- api: initialize()
  desc: "authenticates with the callstats.io backend to setup a trusted relationship with it. See [integration section](#integrating-with-your-sdk) for details on when to call this API."
  status: "implemented"
  params:
  - attr: "AppID"
    desc: "of type _String_. It is obtained from callstats.io backend; discussed in a [later section](#preparing-the-origin-server)."
  - attr: "AppSecret"
    desc: "of type _String_. It is obtained from callstats.io backend; discussed in a [later section](#preparing-the-origin-server)."
  - attr: "localUserID"
    desc: "of type _String_, maximum length **256 bytes**. It is generated by the origin server and MUST NOT be null or empty; discussed in a [later section](#generating-the-userid)."
  - attr: "initCallback"
    desc: "providing a callback function is OPTIONAL, the callback asynchronously reports failure or success. See [Callback and Error Handling](#callback-and-error-handling) section below."
  - attr: "statsCallback"
    desc: "providing a callback function is OPTIONAL, the callback asynchronously reports the conference statistics. See [Integrating with your SDK - Step 8](#step-8-optional-handling-stats-from-statscallback) section below."
  - attr: "configParams"
    desc: "configParams is OPTIONAL, It is the set of parameters to enable/disable certain features in the library. See [Integrating with your SDK - Step 2](#step-2-initialize) section below for details. "

- api: addNewFabric()
  desc: "indicates that the WebRTC application intends to monitor the performance of the _PeerConnection_ between the two endpoints (represented by the corresponding UserIDs). See [integration section](#integrating-with-your-sdk) for details on when to call this API."
  status: "implemented"
  params:
  - attr: "pcObject"
    desc: "pass the _PeerConnection_ object created after invoking `RTCPeerConnection()`."
  - attr: "remoteUserID"
    desc: "of type _String_, maximum length **256 bytes**. It is generated by the origin server and MUST NOT be null or empty; discussed in a [later section](#generating-the-userid)."
  - attr: "fabricUsage"
    desc: "an Enumeration, with valid values values discussed in a [later section](#enumeration-of-fabricusage)."
  - attr: "conferenceID"
    desc: "of type _String_, maximum length **512 bytes**. It is generated by the origin server and MUST NOT be null or empty; discussed in a [later section](#generating-the-conferenceid)."
  - attr: "pcCallback"
    desc: "providing a callback function is OPTIONAL, the callback asynchronously reports failure or success. See [Callback and Error Handling](#callback-and-error-handling) section below."

- api: reportError()
  desc: "notifies the callstats.io backend about conference setup failure associated with reason."
  status: "implemented"
  params:
  - attr: "pcObject"
    desc: "SHOULD pass the _PeerConnection_ object on which the failure occurred, however it MAY be set to null when passing in errors that occur when _getUserMedia()_ is called."
  - attr: "conferenceID"
    desc: "of type _String_, maximum length **512 bytes**. It is generated by the origin server and MUST NOT be null or empty; discussed in a [later section](#generating-the-conferenceid)."
  - attr: "wrtcFuncName"
    desc: "an Enumeration, [WebRTC function](#enumeration-of-wrtcfuncnames) where the failure occurred."
  - attr: "domError"
    desc: "pass the DOMError object received in the callback associated with the WebRTC API/function."
  - attr: "localSDP"
    desc: "pass the local SDP when errors occur before or during setLocalDescription() is executed. It MAY be set to NULL, in case you do not want SDPs to be collected."
  - attr: "remoteSDP"
    desc: "pass the remote SDP when errors occur during `createAnswer()`. It MAY be set to NULL, in case you do not want SDPs to be collected."

- api: associateMstWithUserID()
  desc: "maps the SSRCs to a userID when multiple _MediaStreamTracks_ (MSTs) are sent or received in a single _PeerConnection_."
  status: "implemented"
  params:
  - attr: "pcObject"
    desc: "pass the _PeerConnection_ object on which the _MediaStreamTracks_ are being sent."
  - attr: "userID"
    desc: "of type _String_, maximum length **256 bytes**. It is generated by the origin server and MUST NOT be null or empty; discussed in a [later section](#generating-the-userid)."
  - attr: "conferenceID"
    desc: "of type _String_, maximum length **512 bytes**. It is generated by the origin server and MUST NOT be null or empty; discussed in a [later section](#generating-the-conferenceid)."
  - attr: "ssrc"
    desc: "Synchronization Source Identifier, as defined in [RFC3550](https://tools.ietf.org/html/rfc3550). It is typically generated by the user-agent and MUST not be null or empty."
  - attr: "usageLabel"
    desc: "of type _String_, maximum length **20 bytes**. It is generated by the origin server and MUST not be null or empty. For example, it can be set to `front-camera`, `back-camera`, `screen`, `audio-in`, `mic`, `system-sound`, enumeration-of-wrtcfuncname."
  - attr: "associatedVideoTag"
    desc: "providing the associated `video tag id` attribute value. This is argument OPTIONAL."

- api: sendFabricEvent()
  desc: "notifies the callstats.io backend about events (e.g., 'Hold', 'Mute', etc.) on a _PeerConnection_. It is usually generated due to local user interaction at a _PeerConnection_."
  status: "implemented"
  params:
  - attr: "pcObject"
    desc: "pass the _PeerConnection_ object associated with the _fabricEvent_."
  - attr: "fabricEvent"
    desc: "an Enumeration, with valid values discussed in a [later section](#enumeration-of-fabricusage)."
  - attr: "conferenceID"
    desc: "of type _String_, maximum length **512 bytes**. It is generated by the origin server and MUST NOT be null or empty; discussed in a [later section](#generating-the-conferenceid)."

- api: sendUserFeedback()
  desc: "Send the feedback indicated by the user for a specific conferenceID."
  status: "implemented"
  params:
  - attr: "conferenceID"
    desc: "of type _String_, maximum length **512 bytes**. It is generated by the origin server and MUST NOT be null or empty; discussed in a [later section](#generating-the-conferenceid)."
  - attr: "feedback"
    desc: "is a JSON object. See details in [JSON for sendUserFeedback](#json-for-senduserfeedback)."
  - attr: "pcCallback"
    desc: "providing a callback function is OPTIONAL, the callback asynchronously reports failure or success. See [Callback and Error Handling](#callback-and-error-handling) section below."
