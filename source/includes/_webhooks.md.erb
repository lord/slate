# Webhook Endpoints

Webhooks can be used by software engineers to integrate ControlShift with third-party systems. They allow engineers to build software that is triggered by events that take place within ControlShift. ControlShift would execute HTTP calls when certain event happen (e.g. a petition is launched; a category is changed).

To begin using these new webhooks, go to the admin homepage and click "Settings" under "Manage." Then choose the "CRM Integration & Webhooks" tab and click "Configure Webhook Endpoints." To begin sending data, you'll need to add a "New Webhook Endpoint." Each Webhook Endpoint URL receives a full firehose of all hooks that occur within ControlShift.

We recommend using a tool like [RequestBin](http://requestb.in/) to help debug and develop your webhook integration. RequestBin allows engineers to see all of the webhooks generated by the application and sent to an endpoint.

If you need additional information about webhooks or how to use them, please send us a support email [support@controlshiftlabs.com](mailto:support@controlshiftlabs.com). We'd also love stories about how customers are using webhooks.

### Identifying Unique Webhook Events

In the extermely unlikely event that a webhook is double set for some reason (error on our end, Internet gremlins, etc.), you can always identify webhooks by their unique `jid` (job id). If an incoming webhook has the same `jid` as a webhook that has already been processed, you can safely ignore the new one.



## Webhook types summary

You can configure ControlShift Labs Webhooks to return the following event types:

Type | Description
---------- | -------
<% data.webhooks.each do |webhook| %>
[<%= webhook.webhook %>](#<%= webhook.webhook.gsub('.','-') %>) | <%= webhook.description %>
<% end %>


<% data.webhooks.each do |webhook| %>
## <%= webhook.webhook %>
> Example payload for `<%= webhook.webhook %>`:

```json
<%= JSON.pretty_generate(webhook.payload) %>
```

<%= webhook.description %>

<% end %>