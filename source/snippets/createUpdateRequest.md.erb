> Example Request: Create Update Request

```shell
curl https://api.smartsheet.com/2.0/sheets/{sheetId}/updaterequests \
-H "Authorization: Bearer ll352u9jujauoqz4gstvsae05" \
-H "Content-Type: application/json" \
-X POST \
-d '{ \
    "sendTo": [ \
        {"email": "recipient1@smartsheet.com"}, \
        {"email": "recipient2@smartsheet.com"} \
    ], \
    "subject": "Sample Monthly Update Request", \
    "message": "Please update my online sheet.", \
    "ccMe": false, \
    "rowIds": [4508292249610116, 2256492435924868], \
    "columnIds": [4508284196546436, 2256484382861188], \
    "includeAttachments": false, \
    "includeDiscussions": false \
}'
```

```csharp
// Specify recipients
Recipient[] recipientSpecification = new Recipient[] {
    new Recipient { Email = "recipient1@smartsheet.com"}
};

// Configure update request
UpdateRequest updateRequestSpecification = new UpdateRequest
{
    SendTo = recipientSpecification,
    Subject = "Sample Monthly Update Request",
    Message = "Please update my online sheet.",
    CcMe = true,
    RowIds = new long[] { 1123834706323332, 5627434333693828 },
    ColumnIds = new long[] { 4549065498224516, 2297265684539268 },
    IncludeAttachments = true,
    IncludeDiscussions = true
};

// Send update request via email
UpdateRequest newUpdateRequest = smartsheet.SheetResources.UpdateRequestResources.CreateUpdateRequest(
    3285357287499652,       // long sheetId
    updateRequestSpecification
);
```

```javascript
// [todo]
```

```java
// Specify recipients
RecipientEmail recipientSpecification = new RecipientEmail.AddRecipientEmailBuilder()
    .setEmail("recipient1@smartsheet.com")
    .setEmail("recipient2@smartsheet.com")
    .build();

List<Recipient> recipients = new ArrayList<Recipient>();
recipients.add(recipientSpecification);

// Specify parameters for update request
UpdateRequest updateRequest = new UpdateRequest();
updateRequest.setSendTo(recipientSpecification);
updateRequest.setSubject("Sample Monthly Update Request");
updateRequest.setMessage("Please update my online sheet.");
updateRequest.setRowIds(Arrays.asList(3344087179913092L, 7847686807283588L));
updateRequest.setColumnIds(Arrays.asList(1735559124150148L, 1735559124150148L));
updateRequest.setIncludeAttachments(false);
updateRequest.setIncludeDiscussions(false);

// Create update request
smartsheet.sheetResources().updateRequestResources().createUpdateRequest(
    1639534409607044L,      // long sheetId
    updateRequest
);
```

```python
# Configure email
email_spec = ss_client.models.MultiRowEmail()
email_spec.send_to = [
    ss_client.models.Recipient({'email': 'recipient1@smartsheet.com'}),
    ss_client.models.Recipient({'email': 'recipient2@smartsheet.com'})]
email_spec.subject = 'Please update based on meeting'
email_spec.message = 'some message'
email_spec.cc_me = False
email_spec.row_ids = [6809535313667972]
email_spec.column_ids = [7036894123976580]

# Send update request
new_update_request = ss_client.Sheets.send_update_request(
    5190835902932868,           # sheet_id
    email_spec
)
```

> Example Response:

<%= partial "snippets/createImmediateUpdateRequest_response.md.erb" %>

> Example Request: Create Immediate Update Request

```shell
curl https://api.smartsheet.com/2.0/sheets/{sheetId}/updaterequests \
-H "Authorization: Bearer ll352u9jujauoqz4gstvsae05" \
-H "Content-Type: application/json" \
-X POST \
-d '{ \
    "sendTo": [ \
        {"email": "recipient1@smartsheet.com"} \
    ], \
    "subject": "Sample Monthly Update Request", \
    "message": "Please update my online sheet.", \
    "ccMe": false, \
    "rowIds": [7886095586224004], \
    "columnIds": [6962516556310404, 3584816835782532], \
    "includeAttachments": true, \
    "includeDiscussions": true, \
    "schedule": { \
		"type": "MONTHLY", \
		"startAt": "2016-04-01T19:00:00Z", \
		"endAt": "2016-12-31T07:00:00Z", \
		"dayOfMonth": 1, \
		"repeatEvery": 1 \
	} \
}'
```

> Example Response:

<%= partial "snippets/createScheduledUpdateRequest_response.md.erb" %> 

`POST /sheets/{sheetId}/updaterequests`

Creates an Update Request for the specified Rows within the Sheet. An email notification (containing a link to the update request) is sent to the specified recipients according to the specified schedule.

<aside class="notice" >The recipients of an update request must be specified by using email addresses only. Sending an update request to a <a href="#groups">Group</a> is not supported.</aside>

<%= partial "snippets/createUpdateRequest_table.md.erb" %>